name: build
on:
  push:
    branches-ignore:
      - "refs/pull/**"
    tags-ignore:
      - "*"  
  pull_request:
    branches: 
      - master
jobs:
  basic:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v1
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100
    - name: Set Dotnet Tools Path
      run: echo "::set-env name=PATH::${PATH}:${HOME}/.dotnet/tools"   
    - name: Count Test Projects
      run: echo "::set-env name=TEST_PROJ_COUNT::$(ls -l test |grep "^d"|wc -l)"
  lint:
    needs: [basic]
    runs-on: ubuntu-latest
    steps:
    - name: Check Code Format
      run: dotnet tool install -g dotnet-format && dotnet format --dry-run --check
  build:
    needs: [basic]
    runs-on: ubuntu-latest
    steps:
    - name: Build with dotnet
      run: dotnet build
  test:
    needs: [basic]
    runs-on: ubuntu-latest
    steps:
    - name: Run Unit test
      run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura
    - name: Combin All Test Report
      run: dotnet tool install -g dotnet-reportgenerator-globaltool && reportgenerator  -reports:test/*/coverage.cobertura.xml -reporttype:cobertura -targetdir:.
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: unittests
        fail_ci_if_error: true                                         
